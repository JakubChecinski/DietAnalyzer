@model DietAnalyzer.Models.ViewModels.RestrictionViewModel

@{
    ViewBag.Title = "My Restrictions";
}

<h3 class="mb-2">My Restrictions</h3>
<div>
    Here you can edit your special dietary restrictions. We will avoid suggesting you foods that are incompatible with your preferences.
</div>
<hr />
<br>

@using (Html.BeginForm("Manage", "Restriction", FormMethod.Post, new { id = "mainForm" }))
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(x => x.RestrictionInfo.Id)
    @Html.HiddenFor(x => x.RestrictionInfo.UserId)

    <div class="row">
        <div class="form-group col-5 col-sm-3">
            @Html.CheckBoxFor(x => x.RestrictionInfo.Pescetarian,
                new { id = "pescetarian", onclick = "verifyVegeRestrictions('pescetarian')" })
            @Html.LabelFor(x => x.RestrictionInfo.Pescetarian)
            <span asp-validation-for="@Model.RestrictionInfo.Pescetarian" class="text-danger"></span>
        </div>
        <div class="form-group col-5 col-sm-3">
            @Html.CheckBoxFor(x => x.RestrictionInfo.Paleo)
            @Html.LabelFor(x => x.RestrictionInfo.Paleo)
            <span asp-validation-for="@Model.RestrictionInfo.Paleo" class="text-danger"></span>
        </div>
    </div>
    <div class="row">
        <div class="form-group col-5 col-sm-3">
            @Html.CheckBoxFor(x => x.RestrictionInfo.Vegetarian,
                new { id = "vegetarian", onclick = "verifyVegeRestrictions('vegetarian')" })
            @Html.LabelFor(x => x.RestrictionInfo.Vegetarian)
            <span asp-validation-for="@Model.RestrictionInfo.Vegetarian" class="text-danger"></span>
        </div>
        <div class="form-group col-5 col-sm-3">
            @Html.CheckBoxFor(x => x.RestrictionInfo.Keto)
            @Html.LabelFor(x => x.RestrictionInfo.Keto)
            <span asp-validation-for="@Model.RestrictionInfo.Keto" class="text-danger"></span>
        </div>
    </div>
    <div class="row">
        <div class="form-group col-5 col-sm-3">
            @Html.CheckBoxFor(x => x.RestrictionInfo.DairyIntolerant,
                new { id = "dairy", onclick = "verifyVegeRestrictions('dairy')" })
            @Html.LabelFor(x => x.RestrictionInfo.DairyIntolerant)
            <span asp-validation-for="@Model.RestrictionInfo.DairyIntolerant" class="text-danger"></span>
        </div>
        <div class="form-group col-5 col-sm-3">
            @Html.CheckBoxFor(x => x.RestrictionInfo.Diabetes)
            @Html.LabelFor(x => x.RestrictionInfo.Diabetes)
            <span asp-validation-for="@Model.RestrictionInfo.Diabetes" class="text-danger"></span>
        </div>
    </div>
    <div class="row">
        <div class="form-group col-5 col-sm-3">
            @Html.CheckBoxFor(x => x.RestrictionInfo.Vegan,
                new { id = "vegan", onclick = "verifyVegeRestrictions('vegan')" })
            @Html.LabelFor(x => x.RestrictionInfo.Vegan)
            <span asp-validation-for="@Model.RestrictionInfo.Vegan" class="text-danger"></span>
        </div>
        <div class="form-group col-5 col-sm-3">
            @Html.CheckBoxFor(x => x.RestrictionInfo.HeartProblems)
            @Html.LabelFor(x => x.RestrictionInfo.HeartProblems)
            <span asp-validation-for="@Model.RestrictionInfo.HeartProblems" class="text-danger"></span>
        </div>
    </div>
    <div class="row">
        <div class="form-group col-5 col-sm-3">
            @Html.CheckBoxFor(x => x.RestrictionInfo.GlutenIntolerant)
            @Html.LabelFor(x => x.RestrictionInfo.GlutenIntolerant)
            <span asp-validation-for="@Model.RestrictionInfo.GlutenIntolerant" class="text-danger"></span>
        </div>
        <div class="form-group col-5 col-sm-3">
            @Html.CheckBoxFor(x => x.RestrictionInfo.KidneyProblems)
            @Html.LabelFor(x => x.RestrictionInfo.KidneyProblems)
            <span asp-validation-for="@Model.RestrictionInfo.KidneyProblems" class="text-danger"></span>
        </div>
    </div>
    <br>
    <button type="submit" class="btn btn-outline-primary btn-lg mt-2">
        Save
    </button>

}


@section Scripts
{
    <script type="text/javascript">

        function verifyVegeRestrictions(source) {
            switch (source) {
                case 'pescetarian':
                    if (document.getElementById("pescetarian").checked === false) {
                        document.getElementById("vegetarian").checked = false;
                        document.getElementById("vegan").checked = false;
                    }
                    break;
                case 'vegetarian':
                    if (document.getElementById("vegetarian").checked === false) {
                        document.getElementById("vegan").checked = false;
                    }
                    else {
                        document.getElementById("pescetarian").checked = true;
                    }
                    break;
                case 'dairy':
                    if (document.getElementById("dairy").checked === false) {
                        document.getElementById("vegan").checked = false;
                    }
                    break;
                case 'vegan':
                    if (document.getElementById("vegan").checked === true) {
                        document.getElementById("dairy").checked = true;
                        document.getElementById("vegetarian").checked = true;
                        document.getElementById("pescetarian").checked = true;
                    }
                    break;
            }
        }

        $(document).ready(function () {
            $('#nav-restriction').addClass('header-button-current');
        });

    </script>
}
