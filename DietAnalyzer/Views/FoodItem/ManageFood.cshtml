@model DietAnalyzer.Models.ViewModels.FoodItemViewModel

@{
    ViewBag.Title = "Edit Food";
}

@using (Html.BeginForm("ManageFood", "FoodItem", FormMethod.Post,
 new { id = "mainForm", enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(x => x.IsAdd)
    @Html.HiddenFor(x => x.FoodItem.Id)
    @Html.HiddenFor(x => x.FoodItem.Nutrition.Id)
    @Html.HiddenFor(x => x.FoodItem.Restrictions.Id)
    @for (int i = 0; i < Model.AvailableMeasures.Count; i++)
    {
        @Html.HiddenFor(x => x.AvailableMeasures[i].Id)
        @Html.HiddenFor(x => x.AvailableMeasures[i].FoodItemId)
        @Html.HiddenFor(x => x.AvailableMeasures[i].MeasureId)
        @Html.HiddenFor(x => x.AvailableMeasures[i].Measure.Name)
    }
    @Html.AntiForgeryToken()
    @if (Model.HasMeasureProblem)
    {<span class="text-danger">At least one measure must be checked.</span>}
    <div class="row">
        <div class="d-flex col-1 col-md-2 justify-content-end">
            @Html.LabelFor(x => x.FoodItem.Name):
        </div>
        <div class="d-flex col-1 p-0">
            @Html.TextBoxFor(x => x.FoodItem.Name, new { @class = "text-input-long" })
            <span asp-validation-for="@Model.FoodItem.Name" class="text-danger"></span>
        </div>
        <div class="d-flex col-2 col-md-1 offset-4 offset-md-4 offset-lg-2 justify-content-end">
            @if (Model.FoodItem.ImageFromUser == null)
            {
                <img id="imageView" src="/images/emptyImage.png" width="40" height="40" />
            }
            else
            {
                @Html.HiddenFor(x => x.FoodItem.ImageFromUser)
                <img id="imageView" src="@Model.FoodItem.GetImageSrc()" width="40" height="40" />
            }
        </div>
        <div class="d-flex col-1 col-lg-4">
            <label class="btn btn-sm btn-outline-primary custom-file-upload pt-2 mr-2">
                <input asp-for="@Model.ImageFile" type="file" accept=".png, .jpg, .jpeg, .gif"
                       style="display: none;" onchange="previewFile(this);" />
                New file...
            </label>
            @if (Model.HasImageProblem)
            {<span asp-validation-for="@Model.ImageFile" class="text-danger"></span>}
        </div>
    </div>
    <br />
    <hr />
    <p><b>Calories per 100 gram:</b></p>
    <br />
    <div class="row">
        <div class="d-flex col-2 justify-content-end">
            @Html.LabelFor(x => x.FoodItem.Nutrition.CaloriesPer100g, new { @class = "word-wrap" })
        </div>
        <div class="d-flex col-1 p-0">
            @Html.TextBoxFor(x => x.FoodItem.Nutrition.CaloriesPer100g, new { @class = "numeric-input" })
            <span asp-validation-for="@Model.FoodItem.Nutrition.CaloriesPer100g" class="text-danger"></span>
        </div>
        <div class="d-flex col-10">
        </div>
    </div>
    <br />
    <hr />
    <p><b>Main nutrients per 100 gram:</b><br /><i>Specify the values in grams.</i></p>
    <div class="row mt-2 ml-1">
        <div class="d-flex col-1 col-md-2 justify-content-end">
            @Html.LabelFor(x => x.FoodItem.Nutrition.CarbohydratesPer100g, new { @class = "word-wrap" })
        </div>
        <div class="d-flex col-1 p-0">
            @Html.TextBoxFor(x => x.FoodItem.Nutrition.CarbohydratesPer100g, new { @class = "numeric-input" })
            <span asp-validation-for="@Model.FoodItem.Nutrition.CarbohydratesPer100g" class="text-danger"></span>
        </div>
        <div class="d-flex col-1 col-md-2 offset-1 offset-md-0 justify-content-end">
            @Html.LabelFor(x => x.FoodItem.Nutrition.SugarPer100g, new { @class = "word-wrap" })
        </div>
        <div class="d-flex col-1 p-0">
            @Html.TextBoxFor(x => x.FoodItem.Nutrition.SugarPer100g, new { @class = "numeric-input" })
            <span asp-validation-for="@Model.FoodItem.Nutrition.SugarPer100g" class="text-danger"></span>
        </div>
        <div class="d-flex col-1 col-md-2 offset-1 offset-md-0 justify-content-end">
            @Html.LabelFor(x => x.FoodItem.Nutrition.FiberPer100g, new { @class = "word-wrap" })
        </div>
        <div class="d-flex col-1 p-0">
            @Html.TextBoxFor(x => x.FoodItem.Nutrition.FiberPer100g, new { @class = "numeric-input" })
            <span asp-validation-for="@Model.FoodItem.Nutrition.FiberPer100g" class="text-danger"></span>
        </div>
        <div class="d-flex col-6">
        </div>
    </div>
    <div class="row mt-2 ml-1">
        <div class="d-flex col-1 col-md-2 justify-content-end">
            @Html.LabelFor(x => x.FoodItem.Nutrition.FatsPer100g, new { @class = "word-wrap" })
        </div>
        <div class="d-flex col-1 p-0">
            @Html.TextBoxFor(x => x.FoodItem.Nutrition.FatsPer100g, new { @class = "numeric-input" })
            <span asp-validation-for="@Model.FoodItem.Nutrition.FatsPer100g" class="text-danger"></span>
        </div>
        <div class="d-flex col-1 col-md-2 offset-1 offset-md-0 justify-content-end">
            @Html.LabelFor(x => x.FoodItem.Nutrition.SaturatedFatPer100g, new { @class = "word-wrap" })
        </div>
        <div class="d-flex col-1 p-0">
            @Html.TextBoxFor(x => x.FoodItem.Nutrition.SaturatedFatPer100g, new { @class = "numeric-input" })
            <span asp-validation-for="@Model.FoodItem.Nutrition.SaturatedFatPer100g" class="text-danger"></span>
        </div>
        <div class="d-flex col-1 col-md-2 offset-1 offset-md-0 justify-content-end">
            @Html.LabelFor(x => x.FoodItem.Nutrition.ProteinsPer100g, new { @class = "word-wrap" })
        </div>
        <div class="d-flex col-1 p-0">
            @Html.TextBoxFor(x => x.FoodItem.Nutrition.ProteinsPer100g, new { @class = "numeric-input" })
            <span asp-validation-for="@Model.FoodItem.Nutrition.ProteinsPer100g" class="text-danger"></span>
        </div>
    </div>
    <br />
    <hr />
    <p><b>Vitamins and minerals per 100 gram:</b><br /><i>Specify the values as % of daily need.</i></p>
    <div class="row mt-2 ml-1">
        <div class="d-flex col-1 col-md-2 justify-content-end">
            @Html.LabelFor(x => x.FoodItem.Nutrition.VitaminAPer100g, new { @class = "word-wrap" })
        </div>
        <div class="d-flex col-1 p-0">
            @Html.TextBoxFor(x => x.FoodItem.Nutrition.VitaminAPer100g, new { @class = "numeric-input" })
            <span asp-validation-for="@Model.FoodItem.Nutrition.VitaminAPer100g" class="text-danger"></span>
        </div>
        <div class="d-flex col-1 col-md-2 offset-1 offset-md-0 justify-content-end">
            @Html.LabelFor(x => x.FoodItem.Nutrition.VitaminB1Per100g, new { @class = "word-wrap" })
        </div>
        <div class="d-flex col-1 p-0">
            @Html.TextBoxFor(x => x.FoodItem.Nutrition.VitaminB1Per100g, new { @class = "numeric-input" })
            <span asp-validation-for="@Model.FoodItem.Nutrition.VitaminB1Per100g" class="text-danger"></span>
        </div>
        <div class="d-flex col-1 col-md-2 offset-1 offset-md-0 justify-content-end">
            @Html.LabelFor(x => x.FoodItem.Nutrition.VitaminB2Per100g, new { @class = "word-wrap" })
        </div>
        <div class="d-flex col-1 p-0">
            @Html.TextBoxFor(x => x.FoodItem.Nutrition.VitaminB2Per100g, new { @class = "numeric-input" })
            <span asp-validation-for="@Model.FoodItem.Nutrition.VitaminB2Per100g" class="text-danger"></span>
        </div>
    </div>
    <div class="row mt-2 ml-1">
        <div class="d-flex col-1 col-md-2 justify-content-end">
            @Html.LabelFor(x => x.FoodItem.Nutrition.VitaminB3Per100g, new { @class = "word-wrap" })
        </div>
        <div class="d-flex col-1 p-0">
            @Html.TextBoxFor(x => x.FoodItem.Nutrition.VitaminB3Per100g, new { @class = "numeric-input" })
            <span asp-validation-for="@Model.FoodItem.Nutrition.VitaminB3Per100g" class="text-danger"></span>
        </div>
        <div class="d-flex col-1 col-md-2 offset-1 offset-md-0 justify-content-end">
            @Html.LabelFor(x => x.FoodItem.Nutrition.VitaminB6Per100g, new { @class = "word-wrap" })
        </div>
        <div class="d-flex col-1 p-0">
            @Html.TextBoxFor(x => x.FoodItem.Nutrition.VitaminB6Per100g, new { @class = "numeric-input" })
            <span asp-validation-for="@Model.FoodItem.Nutrition.VitaminB6Per100g" class="text-danger"></span>
        </div>
        <div class="d-flex col-1 col-md-2 offset-1 offset-md-0 justify-content-end">
            @Html.LabelFor(x => x.FoodItem.Nutrition.VitaminB9Per100g, new { @class = "word-wrap" })
        </div>
        <div class="d-flex col-1 p-0">
            @Html.TextBoxFor(x => x.FoodItem.Nutrition.VitaminB9Per100g, new { @class = "numeric-input" })
            <span asp-validation-for="@Model.FoodItem.Nutrition.VitaminB9Per100g" class="text-danger"></span>
        </div>
    </div>
    <div class="row mt-2 ml-1">
        <div class="d-flex col-1 col-md-2 justify-content-end">
            @Html.LabelFor(x => x.FoodItem.Nutrition.VitaminB12Per100g, new { @class = "word-wrap" })
        </div>
        <div class="d-flex col-1 p-0">
            @Html.TextBoxFor(x => x.FoodItem.Nutrition.VitaminB12Per100g, new { @class = "numeric-input" })
            <span asp-validation-for="@Model.FoodItem.Nutrition.VitaminB12Per100g" class="text-danger"></span>
        </div>
        <div class="d-flex col-1 col-md-2 offset-1 offset-md-0 justify-content-end">
            @Html.LabelFor(x => x.FoodItem.Nutrition.VitaminDPer100g, new { @class = "word-wrap" })
        </div>
        <div class="d-flex col-1 p-0">
            @Html.TextBoxFor(x => x.FoodItem.Nutrition.VitaminDPer100g, new { @class = "numeric-input" })
            <span asp-validation-for="@Model.FoodItem.Nutrition.VitaminDPer100g" class="text-danger"></span>
        </div>
        <div class="d-flex col-1 col-md-2 offset-1 offset-md-0 justify-content-end">
            @Html.LabelFor(x => x.FoodItem.Nutrition.VitaminEPer100g, new { @class = "word-wrap" })
        </div>
        <div class="d-flex col-1 p-0">
            @Html.TextBoxFor(x => x.FoodItem.Nutrition.VitaminEPer100g, new { @class = "numeric-input" })
            <span asp-validation-for="@Model.FoodItem.Nutrition.VitaminEPer100g" class="text-danger"></span>
        </div>
    </div>
    <div class="row mt-2 ml-1">
        <div class="d-flex col-1 col-md-2 justify-content-end">
            @Html.LabelFor(x => x.FoodItem.Nutrition.VitaminKPer100g, new { @class = "word-wrap" })
        </div>
        <div class="d-flex col-1 p-0">
            @Html.TextBoxFor(x => x.FoodItem.Nutrition.VitaminKPer100g, new { @class = "numeric-input" })
            <span asp-validation-for="@Model.FoodItem.Nutrition.VitaminKPer100g" class="text-danger"></span>
        </div>
        <div class="d-flex col-1 col-md-2 offset-1 offset-md-0 justify-content-end">
            @Html.LabelFor(x => x.FoodItem.Nutrition.CalciumPer100g, new { @class = "word-wrap" })
        </div>
        <div class="d-flex col-1 p-0">
            @Html.TextBoxFor(x => x.FoodItem.Nutrition.CalciumPer100g, new { @class = "numeric-input" })
            <span asp-validation-for="@Model.FoodItem.Nutrition.CalciumPer100g" class="text-danger"></span>
        </div>
        <div class="d-flex col-1 col-md-2 offset-1 offset-md-0 justify-content-end">
            @Html.LabelFor(x => x.FoodItem.Nutrition.IronPer100g, new { @class = "word-wrap" })
        </div>
        <div class="d-flex col-1 p-0">
            @Html.TextBoxFor(x => x.FoodItem.Nutrition.IronPer100g, new { @class = "numeric-input" })
            <span asp-validation-for="@Model.FoodItem.Nutrition.IronPer100g" class="text-danger"></span>
        </div>
    </div>
    <div class="row mt-2 ml-1">
        <div class="d-flex col-1 col-md-2 justify-content-end">
            @Html.LabelFor(x => x.FoodItem.Nutrition.MagnesiumPer100g, new { @class = "word-wrap" })
        </div>
        <div class="d-flex col-1 p-0">
            @Html.TextBoxFor(x => x.FoodItem.Nutrition.MagnesiumPer100g, new { @class = "numeric-input" })
            <span asp-validation-for="@Model.FoodItem.Nutrition.MagnesiumPer100g" class="text-danger"></span>
        </div>
        <div class="d-flex col-1 col-md-2 offset-1 offset-md-0 justify-content-end">
            @Html.LabelFor(x => x.FoodItem.Nutrition.PhosphorusPer100g, new { @class = "word-wrap" })
        </div>
        <div class="d-flex col-1 p-0">
            @Html.TextBoxFor(x => x.FoodItem.Nutrition.PhosphorusPer100g, new { @class = "numeric-input" })
            <span asp-validation-for="@Model.FoodItem.Nutrition.PhosphorusPer100g" class="text-danger"></span>
        </div>
        <div class="d-flex col-1 col-md-2 offset-1 offset-md-0 justify-content-end">
            @Html.LabelFor(x => x.FoodItem.Nutrition.PotassiumPer100g, new { @class = "word-wrap" })
        </div>
        <div class="d-flex col-1 p-0">
            @Html.TextBoxFor(x => x.FoodItem.Nutrition.PotassiumPer100g, new { @class = "numeric-input" })
            <span asp-validation-for="@Model.FoodItem.Nutrition.PotassiumPer100g" class="text-danger"></span>
        </div>
    </div>
    <div class="row mt-2 ml-1">
        <div class="d-flex col-1 col-md-2 justify-content-end">
            @Html.LabelFor(x => x.FoodItem.Nutrition.SodiumPer100g, new { @class = "word-wrap" })
        </div>
        <div class="d-flex col-1 p-0">
            @Html.TextBoxFor(x => x.FoodItem.Nutrition.SodiumPer100g, new { @class = "numeric-input" })
            <span asp-validation-for="@Model.FoodItem.Nutrition.SodiumPer100g" class="text-danger"></span>
        </div>
        <div class="d-flex col-1 col-md-2 offset-1 offset-md-0 justify-content-end">
            @Html.LabelFor(x => x.FoodItem.Nutrition.ZincPer100g, new { @class = "word-wrap" })
        </div>
        <div class="d-flex col-1 p-0">
            @Html.TextBoxFor(x => x.FoodItem.Nutrition.ZincPer100g, new { @class = "numeric-input" })
            <span asp-validation-for="@Model.FoodItem.Nutrition.ZincPer100g" class="text-danger"></span>
        </div>
        <div class="d-flex col-1 col-md-2 offset-1 offset-md-0 justify-content-end">
            @Html.LabelFor(x => x.FoodItem.Nutrition.CopperPer100g, new { @class = "word-wrap" })
        </div>
        <div class="d-flex col-1 p-0">
            @Html.TextBoxFor(x => x.FoodItem.Nutrition.CopperPer100g, new { @class = "numeric-input" })
            <span asp-validation-for="@Model.FoodItem.Nutrition.CopperPer100g" class="text-danger"></span>
        </div>
    </div>
    <div class="row mt-2 ml-1">
        <div class="d-flex col-1 col-md-2 justify-content-end">
            @Html.LabelFor(x => x.FoodItem.Nutrition.ManganesePer100g, new { @class = "word-wrap" })
        </div>
        <div class="d-flex col-1 p-0">
            @Html.TextBoxFor(x => x.FoodItem.Nutrition.ManganesePer100g, new { @class = "numeric-input" })
            <span asp-validation-for="@Model.FoodItem.Nutrition.ManganesePer100g" class="text-danger"></span>
        </div>
        <div class="d-flex col-1 col-md-2 offset-1 offset-md-0 justify-content-end">
            @Html.LabelFor(x => x.FoodItem.Nutrition.SeleniumPer100g, new { @class = "word-wrap" })
        </div>
        <div class="d-flex col-1 p-0">
            @Html.TextBoxFor(x => x.FoodItem.Nutrition.SeleniumPer100g, new { @class = "numeric-input" })
            <span asp-validation-for="@Model.FoodItem.Nutrition.SeleniumPer100g" class="text-danger"></span>
        </div>
    </div>
    <br />
    <hr />
    <p><b>This food is suitable for:</b></p>
    <div class="row">
        <div class="d-flex col-1 col-md-2 justify-content-end">
            @Html.CheckBoxFor(x => x.FoodItem.Restrictions.Pescetarian)
        </div>
        <div class="d-flex col-1 col-xl-2 mb-1 align-items-center ">
            @Html.LabelFor(x => x.FoodItem.Restrictions.Pescetarian, new { @class = "word-wrap" })
            <span asp-validation-for="@Model.FoodItem.Restrictions.Pescetarian" class="text-danger"></span>
        </div>
        <div class="d-flex col-1 justify-content-end">
            @Html.CheckBoxFor(x => x.FoodItem.Restrictions.Paleo)
        </div>
        <div class="d-flex col-1 col-xl-2 mb-1 align-items-center ">
            @Html.LabelFor(x => x.FoodItem.Restrictions.Paleo, new { @class = "word-wrap" })
            <span asp-validation-for="@Model.FoodItem.Restrictions.Paleo" class="text-danger"></span>
        </div>
        <div class="d-flex col-1 justify-content-end">
            @Html.CheckBoxFor(x => x.FoodItem.Restrictions.Diabetes)
        </div>
        <div class="d-flex col-1 col-xl-2 mb-1 align-items-center ">
            @Html.LabelFor(x => x.FoodItem.Restrictions.Diabetes, new { @class = "word-wrap" })
            <span asp-validation-for="@Model.FoodItem.Restrictions.Diabetes" class="text-danger"></span>
        </div>
    </div>
    <div class="row">
        <div class="d-flex col-1 col-md-2 justify-content-end">
            @Html.CheckBoxFor(x => x.FoodItem.Restrictions.Vegetarian)
        </div>
        <div class="d-flex col-1 col-xl-2 mb-1 align-items-center ">
            @Html.LabelFor(x => x.FoodItem.Restrictions.Vegetarian, new { @class = "word-wrap" })
            <span asp-validation-for="@Model.FoodItem.Restrictions.Vegetarian" class="text-danger"></span>
        </div>
        <div class="d-flex col-1 justify-content-end">
            @Html.CheckBoxFor(x => x.FoodItem.Restrictions.Keto)
        </div>
        <div class="d-flex col-1 col-xl-2 mb-1 align-items-center ">
            @Html.LabelFor(x => x.FoodItem.Restrictions.Keto, new { @class = "word-wrap" })
            <span asp-validation-for="@Model.FoodItem.Restrictions.Keto" class="text-danger"></span>
        </div>
        <div class="d-flex col-1 justify-content-end">
            @Html.CheckBoxFor(x => x.FoodItem.Restrictions.GlutenIntolerant)
        </div>
        <div class="d-flex col-1 col-xl-2 mb-1 align-items-center ">
            @Html.LabelFor(x => x.FoodItem.Restrictions.GlutenIntolerant, new { @class = "word-wrap" })
            <span asp-validation-for="@Model.FoodItem.Restrictions.GlutenIntolerant" class="text-danger"></span>
        </div>
    </div>
    <div class="row">
        <div class="d-flex col-1 col-md-2 justify-content-end">
            @Html.CheckBoxFor(x => x.FoodItem.Restrictions.DairyIntolerant)
        </div>
        <div class="d-flex col-1 col-xl-2 mb-1 align-items-center ">
            @Html.LabelFor(x => x.FoodItem.Restrictions.DairyIntolerant, new { @class = "word-wrap" })
            <span asp-validation-for="@Model.FoodItem.Restrictions.DairyIntolerant" class="text-danger"></span>
        </div>
        <div class="d-flex col-1 justify-content-end">
            @Html.CheckBoxFor(x => x.FoodItem.Restrictions.HeartProblems)
        </div>
        <div class="d-flex col-1 col-xl-2 mb-1 align-items-center ">
            @Html.LabelFor(x => x.FoodItem.Restrictions.HeartProblems, new { @class = "word-wrap" })
            <span asp-validation-for="@Model.FoodItem.Restrictions.HeartProblems" class="text-danger"></span>
        </div>
        <div class="d-flex col-1 justify-content-end">
            @Html.CheckBoxFor(x => x.FoodItem.Restrictions.KidneyProblems)
        </div>
        <div class="d-flex col-1 col-md-2 mb-1 align-items-center ">
            @Html.LabelFor(x => x.FoodItem.Restrictions.KidneyProblems, new { @class = "word-wrap" })
            <span asp-validation-for="@Model.FoodItem.Restrictions.KidneyProblems" class="text-danger"></span>
        </div>
    </div>
    <div class="row">
        <div class="d-flex col-1 col-md-2 justify-content-end">
            @Html.CheckBoxFor(x => x.FoodItem.Restrictions.Vegan)
        </div>
        <div class="d-flex col-1 col-xl-2 mb-1 align-items-center ">
            @Html.LabelFor(x => x.FoodItem.Restrictions.Vegan, new { @class = "word-wrap" })
            <span asp-validation-for="@Model.FoodItem.Restrictions.Vegan" class="text-danger"></span>
        </div>
    </div>
    <br />
    <hr />
    <p><b>Available units of measure:</b></p>
    @if (Model.HasMeasureProblem)
    {<span class="text-danger">At least one measure must be checked.</span>}
    <div class="row row-cols-3">
        @for (int i = 0; i < Model.AvailableMeasures.Count; i++)
        {
            <div class="d-flex col-1 col-md-2 justify-content-end align-items-center">
                @Html.CheckBoxFor(x => x.AvailableMeasures[i].IsCurrentlyLinked)
            </div>
            <div class="d-flex col-1 mb-1 align-items-center ">
                <text>@Model.AvailableMeasures[i].Measure.Name</text>
            </div>
        }
    </div>
    <br />
    <hr />
    <div class="row">
        <div class="d-flex col-1 offset-2 justify-content-end">
            <button type="submit" class="btn btn-primary btn-lg mt-2">
                Save
            </button>
        </div>
        <div class="d-flex col-1 offset-2 justify-content-end">
            <button type="button" class="btn btn-primary btn-lg mt-2"
                    onclick="location.href='@Url.Action("FoodList", "FoodItem")'">
                Cancel
            </button>
        </div>
    </div>
    <br />
}
<footer class="customInfo">
    <div class="container mx-1 mx-lg-auto main-block">
        Here you can edit your custom food. If you don't know a specific nutrition value, feel free to leave it blank.
    </div>
</footer>

@section Scripts {

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script type="text/javascript">

        function previewFile(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('#imageView').attr('src', e.target.result);
                }
                reader.readAsDataURL(input.files[0]);
            }
        }

    </script>



}