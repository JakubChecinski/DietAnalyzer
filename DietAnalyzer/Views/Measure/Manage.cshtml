@model DietAnalyzer.Models.ViewModels.MeasureViewModel

<h3 class="mb-2">Your custom units: </h3>
<br>

@using (Html.BeginForm("Manage", "Measure", FormMethod.Post, new { id = "mainForm" }))
{
    @Html.HiddenFor(x => x.PositionsToDelete)
    @Html.AntiForgeryToken()
    <div asp-validation-summary="All" class="text-danger"></div>

    <table id="Table">
        <tbody>
            @for (int i = 0; i < Model.Measures.Count; i++)
            {
                <tr>
                    @Html.HiddenFor(x => Model.Measures[i].Id)
                    @Html.HiddenFor(x => Model.Measures[i].UserId)
                    <td class="col-sm-1">
                        @Html.LabelFor(x => Model.Measures[i].Name):
                    </td>
                    <td class="col-sm-1">
                        @Html.TextBoxFor(x => Model.Measures[i].Name, new { @class = "text-input" })
                    </td>
                    <td class="col-sm-1">
                        equal to:
                    </td>
                    <td class="col-sm-1">
                        @Html.TextBoxFor(x => Model.Measures[i].Grams, new { @class = "numeric-input" })
                    </td>
                    <td class="col-sm-1">
                        grams
                    </td>
                    <td class="col-sm-2">
                        <button type="button" class="btn btn-danger tn-sm"
                                onclick="deleteRow(this)">
                            Delete unit
                        </button>
                    </td>
                    <td class="col-sm-4"></td>
                </tr>
            }
        </tbody>
    </table>
    <br>
    <br />
    <button type="button" class="btn btn-primary btn-lg mt-2"
            onclick="AddNewRow()">
        Add new unit
    </button>
    <br>
    <br />
    <button type="submit" class="btn btn-primary btn-lg mt-2">
        Save
    </button>
}


@section Scripts
{
    <script type="text/javascript">
        function AddNewRow() {
            var rowIndex = $("#Table>tbody>tr").length;
            $.ajax({
                url: 'AddNewUnit?index=' + rowIndex,
                success: function (data) {
                    $('#Table > tbody').append(data);
                },
                error: function (a, b, c) {
                    console.log(a, b, c);
                }
            });
        }

        // there probably exists a better way to do that... I'm just not very good at JS
        function deleteRow(button) {
            var row = button.parentNode.parentNode;
            var rowIndex = row.rowIndex;
            document.getElementById("PositionsToDelete").value =
                document.getElementById("PositionsToDelete").value.concat(row.rowIndex, ",");
            row.remove();
            var table = document.getElementById("Table");
            for (var i = 0, tableRow; tableRow = table.rows[i]; i++) {
                tableRow.innerHTML = setMeasures(tableRow.innerHTML, tableRow.rowIndex);
            }
        }

        function setMeasures(str, rowIndex) {
            var regex = /Measures/g, result, indices = [];
            while ((result = regex.exec(str))) {
                indices.push(result.index);
            }
            for (var i = 0; i < indices.length; i++) {
                if (indices[i] < str.length - 9) {
                    str = replaceAt(str, indices[i] + 9, rowIndex);
                }
            }
            return str;
        }

        function replaceAt(str, index, newSubStr) {
            return str.substring(0, index) + newSubStr + str.substring(index + 1);
        }


    </script>
}
