@using Microsoft.AspNetCore.Identity
@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav ml-auto">
    @if (SignInManager.IsSignedIn(User))
    {
        @*<li class="nav-item mx-2">
            <a class="nav-link btn text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Profile</a>
        </li>*@
        <li class="nav-item">
            <div class="row justify-content-center">
                <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                    <button type="submit" class="nav-link header-button log-button mx-3 text-dark"
                            style="background-color: #99ccff;font-weight: bold;">
                        Logout
                    </button>
                </form>
            </div>
        </li>
    }
    else
    {
        <li class="nav-item mx-2">
            @if(Convert.ToBoolean(@Configuration["AllowNewUsersRegistration"]))
            { 
                <a class="nav-link header-button log-button text-dark" style="background-color: #99ccff;font-weight: bold;" asp-area="Identity" asp-page="/Account/Register">Register</a>
            }
        </li>
        <li class="nav-item">
            <a class="nav-link header-button log-button text-dark" style="background-color: #99ccff;font-weight: bold;" asp-area="Identity" asp-page="/Account/Login">&nbsp&nbspLogin&nbsp</a>
        </li>
    }
</ul>
